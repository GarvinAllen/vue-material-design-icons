# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: mdi.js auto updater
on:
  workflow_dispatch:

  schedule:
    - cron: '0 0 * * 0' # weekly on sunday @ 12am

jobs:
  check:
    runs-on: ubuntu-latest
    outputs: 
      update: 'false'
      local_version: ${{steps.set_variables.outputs.local_version}}
      remote_version: ${{steps.set_variables.outputs.remote_version}}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.9.0

      - id: remote_version
        uses: oprypin/find-latest-tag@v1
        with:
          repository: Templarian/MaterialDesign-JS
          releases-only: false

      - id: local_version
        uses: amochkin/action-json@v1
        with:
          mode: read
          property: 'devDependencies.@mdi/js'
          fallback: 1.0.0

      - id: set_variables
        shell: bash
        run: |
          local_version="${{ steps.local_version.outputs.value }}" 
          remote_version="${{ steps.remote_version.outputs.tag }}"
          remote_version="${remote_version#v}" # remove "v" prefix

          echo "local_version=${local_version}" >> $GITHUB_OUTPUT
          echo "remote_version=${remote_version}" >> $GITHUB_OUTPUT

  update:
    runs-on: ubuntu-latest
    needs: [check]
    if: needs.check.outputs.local_version != needs.check.outputs.remote_version
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.9.0

      - name: Update @mdi/js version
        uses: amochkin/action-json@v1
        with:
          mode: write
          property: 'devDependencies.@mdi/js'
          value: ${{ needs.check.outputs.remote_version }}

      - name: Update our version
        uses: amochkin/action-json@v1
        with:
          mode: write
          property: 'version'
          value: ${{ needs.check.outputs.remote_version }}

      - name: Install
        run: npm install

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test

      - name: Create PR
        uses: peter-evans/create-pull-request@v5
        with: 
          title: 'Bump @mdi/js from ${{ needs.check.outputs.local_version }} to ${{ needs.check.outputs.remote_version }}'
          body: 'Bumps @mdi/js from ${{ needs.check.outputs.local_version }} to ${{ needs.check.outputs.remote_version }}'
          commit-message: 'Bump @mdi/js from ${{ needs.check.outputs.local_version }} to ${{ needs.check.outputs.remote_version }}'
