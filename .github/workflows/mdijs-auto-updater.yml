# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: mdi.js auto updater
on:
  workflow_dispatch:

  schedule:
    - cron: '0 0 * * *'

jobs:
  mdijs-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.9.0

      - id: remote_version
        uses: oprypin/find-latest-tag@v1
        with:
          repository: Templarian/MaterialDesign-JS
          releases-only: false

      - id: local_version
        uses: amochkin/action-json@v1
        with:
          mode: read
          property: 'devDependencies.@mdi/js'
          fallback: 1.0.0

      - name: Output variables
        shell: bash
        run: |
          local_version="${{ steps.local_version.outputs.value }}" 
          remote_version="${{ steps.remote_version.outputs.tag }}"
          remote_version="${remote_version#v}" # remove "v" prefix

          echo "LOCAL_VERSION: $local_version"
          echo "REMOTE_VERSION: $remote_version"
          
          echo "LOCAL_VERSION=$local_version" >> $GITHUB_ENV
          echo "REMOTE_VERSION=$remote_version" >> $GITHUB_ENV

  update-mdijs-version:
    runs-on: ubuntu-latest
    needs: [mdijs-version]
    if: ${{ env.LOCAL_VERSION != env.REMOTE_VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.9.0

      - name: Update @mdi/js version
        uses: amochkin/action-json@v1
        with:
          mode: write
          property: 'devDependencies.@mdi/js'
          value: ${{ needs.mdijs-version.outputs.version }}

      - name: Update @garvinallen/vue-material-design-icons version
        uses: amochkin/action-json@v1
        with:
          mode: write
          property: version
          value: ${{ needs.mdijs-version.outputs.version }}

      - name: Install
        run: npm install

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test

      - name: Commit & Push
        uses: actions-js/push@master
        with:
          branch: dev
          message: "chore: bump @mdi/js to ${{ needs.mdijs-version.outputs.version }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}
